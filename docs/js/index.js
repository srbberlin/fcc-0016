(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var url = 'https://raw.githubusercontent.com/FreeCodeCamp/ProjectReferenceData/master/GDP-data.json';
var height = 400;
var colWidth = 3;
var toolTip = document.getElementById('tooltip');
var svg = d3.select('svg');
var main = d3.select('.main');
var chart = d3.select('.chart');
var box = d3.select('.box');
var foObj = d3.select('foreignObject');
var head = d3.select('.text thead');
var body = d3.select('.text tbody');
var footer = d3.select('.text tfoot');
toolTip.style.visibility = 'hidden';

var mx = function mx(a) {
  var res = 0,
      i = 0,
      l = a.length;

  while (i < l) {
    if (res < a[i][1]) {
      res = a[i][1];
    }

    i++;
  }

  return res;
};

var movr = function movr(e) {
  toolTip.innerText = e.target.attributes[3].value + ', ' + e.target.attributes[4].value;
  toolTip.style.visibility = 'visible';
  toolTip.setAttribute('data-date', e.target.attributes[3].value);
  toolTip.setAttribute('data-gdp', e.target.attributes[4].value);
};

var mout = function mout() {
  toolTip.style.visibility = 'hidden';
};

d3.json(url, function (error, res) {
  if (!error) {
    var dateFrom = new Date(res.from_date);
    var dateTo = new Date(res.to_date);
    var source = res.source_name;
    var name = res.name.split(',')[0] + ' of the USA';
    var des = res.description.split('\n');
    var value = res.data;
    var width = colWidth * value.length - 2;
    var barScale = d3.scaleLinear().domain([0, mx(value)]).range([0, height]);
    var valueScale = d3.scaleLinear().domain([0, mx(value)]).range([height, 0]);
    var timeScale = d3.scaleTime().domain([dateFrom, dateTo]).range([0, width]);
    var timeAxis = d3.axisBottom(timeScale);
    var valueAxis = d3.axisRight(valueScale);
    des.push('Source: ' + source);
    svg.attr('height', height + 90).attr('width', width + 100);
    main.attr('height', height + 90).attr('width', width + 100);
    box.attr('transform', 'translate(25, 25)').attr('height', 250).attr('width', 350);
    foObj.attr('transform', 'translate(25, 25)').attr('height', 250).attr('width', 350);
    head.html('<td colspan="2">' + name + '</td>');
    body.selectAll('tbody').data(des).enter().append('tr').html(function (d) {
      var v = d.split(': ');

      if (v[1]) {
        v[1] = v[1].replace(/\((http.*?)\)/i, '<a href=$1 target=_blank>$1</a>');
      }

      return '<td>' + v[0] + '</td><td>' + v[1] + '</td>';
    });
    footer.html('<td colspan="2">' + '' + '</td>');
    chart.attr('transform', 'translate(15, 15)').attr('height', height).attr('width', width).selectAll('g').data(value).enter().append('g').append('rect').attr('class', 'bar').attr('width', colWidth - 1).attr('height', function (d) {
      return barScale(d[1]);
    }).attr('data-date', function (d) {
      return d[0];
    }).attr('data-gdp', function (d) {
      return d[1];
    }).attr('transform', function (d, i) {
      return 'translate(' + i * colWidth + ',' + (height - barScale(d[1])) + ')';
    });
    chart.append('g').attr('id', 'x-axis').attr('transform', 'translate(0, ' + (height + 10) + ')').call(timeAxis);
    chart.append('g').attr('id', 'y-axis').attr('transform', 'translate(' + (width + 10) + ', 0)').call(valueAxis);
  }

  var bars = document.getElementsByClassName('bar');

  for (var i = 0; i < bars.length; i++) {
    bars[i].addEventListener('mouseover', movr);
    bars[i].addEventListener('mouseout', mout);
  }
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
